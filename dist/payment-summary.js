import{cart,updateCartQuantity,removeFromCart}from"./data/cart.js";import{formatCurrency}from"./utils/money.js";import{loadProducts}from"./products.js";import{checkout}from"./order.js";export function renderPaymentSummary(){let t="",r=0;cart.forEach((e=>{const a=e.priceCents*e.quantity;r+=a,t+=`\n         <div class="cart-product__details flex">\n                <div class="left-side">\n                  <p class="product-description">${e.productName}</p>\n                  <span class="quantity-mutiple">${e.quantity}x</span>\n                  <span class="price">@ &dollar;${formatCurrency(e.priceCents)}</span>\n                  <span class="product-total">&dollar;${formatCurrency(a)}</span>\n                </div>\n                <div class="right-side js-remove-cart-item" data-product-name="${e.productName}" > \n                  <button>\n                    <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" fill="none" viewBox="0 0 10 10"><path d="M8.375 9.375 5 6 1.625 9.375l-1-1L4 5 .625 1.625l1-1L5 4 8.375.625l1 1L6 5l3.375 3.375-1 1Z"/></svg>\n                  </button>\n                </div>\n              </div>\n              \n        `})),t+=function(t){let r="";return r+=`\n  <div class="cart-product__details flex">\n          <div class="left-side">\n            <p>Order Total</p>\n          </div>\n          <div class="right-side">\n            <h3>&dollar;${formatCurrency(t)}</h3>\n          </div>\n        </div>\n        <div class="carbon-neutral">\n          <p>\n            <img\n              src="assets/images/icon-carbon-neutral.svg"\n              alt="carbon neutral icon"\n            >\n            This is a carbon neutral delivery\n          </p>\n        </div>\n       \n\n  `,document.querySelector(".js-confirm-button").addEventListener("click",(()=>{const t=document.querySelector(".js-popup");t.classList.add("appear"),t.classList.remove("disappear"),t.classList.contains("sr-only")&&t.classList.remove("sr-only"),document.querySelector(".js-overlay").classList.add("overlay-appear"),document.querySelector(".js-overlay").classList.remove("overlay-disappear")})),r}(r),t=0!==cart.length?t:function(){let t="";return t+=' <div class="cart-product">\n        <div class="cart-product__details">\n          <div class="empty_cart-image">\n            <img\n              src="assets/images/illustration-empty-cart.svg"\n              alt="empty cart icon"\n            >\n          </div>\n          <p class="empty-cart-text">Your added items will appear here</p>\n        </div>\n      </div>\n      ',document.querySelector(".js-confirm-button").classList.add("sr-only"),' <div class="cart-product">\n        <div class="cart-product__details">\n          <div class="empty_cart-image">\n            <img\n              src="assets/images/illustration-empty-cart.svg"\n              alt="empty cart icon"\n            >\n          </div>\n          <p class="empty-cart-text">Your added items will appear here</p>\n        </div>\n      </div>\n      '}(),document.querySelector(".js-cart-products").innerHTML=t;const e=updateCartQuantity();document.querySelector(".js-cart-quantity").innerHTML=`(${e})`,document.querySelectorAll(".js-remove-cart-item").forEach((t=>{t.addEventListener("click",(()=>{const{productName:r}=t.dataset;removeFromCart(r),loadProducts(),renderPaymentSummary()}))})),checkout()}//# sourceMappingURL=payment-summary.js.map
